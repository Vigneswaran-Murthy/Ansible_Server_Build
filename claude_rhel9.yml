- name: Join Linux server to Active Directory domain
  hosts: all
  become: true
  tags:
    - Domain_join
  vars_files:
    - vars/domain_credentials.yml   # contains domain_user, domain_password, domain_name, ou_map
    - vars/sssd_vars.yml            # contains sssd_groups list
  tasks:
    ##################################################################
    # Install required packages
    ##################################################################
    - name: Install required packages for realm join
      yum:
        name:
          - realmd
          - sssd
          - sssd-tools
          - adcli
          - krb5-workstation
          - oddjob
          - oddjob-mkhomedir
          - samba-common
          - samba-common-tools
          - authselect-compat
        state: present
      register: sssd_install
      ignore_errors: yes
    ##################################################################
    # Detect environment
    ##################################################################
    - name: Detect short hostname
      set_fact:
        short_hostname: "{{ inventory_hostname.split('.')[0] }}"
      ignore_errors: yes
    - name: Detect environment from hostname (6th letter)
      set_fact:
        env_letter: "{{ short_hostname[5] }}"
        domain_env: >-
          {% if short_hostname[5] == 'p' %}PROD
          {% elif short_hostname[5] == 't' %}TEST
          {% elif short_hostname[5] == 'd' %}DEV
          {% else %}UNKNOWN{% endif %}
      ignore_errors: yes
    - name: Normalize environment name (trim spaces)
      set_fact:
        domain_env: "{{ domain_env | trim }}"
      ignore_errors: yes
    - name: Fail if environment could not be determined
      fail:
        msg: "Unable to determine environment from hostname: {{ short_hostname }}"
      when: domain_env == "UNKNOWN"
      ignore_errors: yes
    - name: Set the OU based on detected environment
      set_fact:
        domain_ou: "{{ ou_map[domain_env] }}"
      ignore_errors: yes
    - name: Show detected environment and OU
      debug:
        msg: "Hostname={{ short_hostname }}, Environment={{ domain_env }}, OU={{ domain_ou }}"
      ignore_errors: yes
    ##################################################################
    # Check if already joined
    ##################################################################
    - name: Check if system is already joined to domain
      command: realm list
      register: realm_status
      changed_when: false
      failed_when: false
      ignore_errors: yes
    ##################################################################
    # Domain Join with block/rescue
    ##################################################################
    - name: Domain join block with fallback
      block:
        - name: Join system to AD domain (RHEL 7/8 method)
          command: >
            realm join --user={{ domain_user }} {{ domain_name }}
            --computer-ou="{{ domain_ou }}"
          args:
            stdin: "{{ domain_password }}"
          register: ansible_output
          no_log: true
          when: domain_name not in realm_status.stdout
          
      rescue:
        - name: Install expect package for RHEL 9
          yum:
            name: expect
            state: present
          ignore_errors: yes
          
        - name: Join system to AD domain using expect (RHEL 9 method)
          expect:
            command: realm join --user={{ domain_user }} {{ domain_name }} --computer-ou="{{ domain_ou }}"
            responses:
              (?i)password: "{{ domain_password }}"
            timeout: 60
          register: ansible_output_rescue
          no_log: true
          when: domain_name not in realm_status.stdout
          
        - name: Display rescue method result
          debug:
            msg: "Domain join completed using RHEL 9 expect method"
          when: ansible_output_rescue is defined and ansible_output_rescue.rc == 0
          
      when: domain_name not in realm_status.stdout
    
    - name: Display domain join status
      debug:
        msg: "System is already joined to {{ domain_name }}"
      when: domain_name in realm_status.stdout
